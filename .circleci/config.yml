# version: 2.1

# # Define the jobs we want to run for this project
# jobs:
#   build:
#     working_directory: ~/repo
#     executor:
#       name: ubuntu-machine
#       docker_layer_caching: true
#     steps:
#       - checkout
#       - run: docker-compose --file docker-compose.ci.yml build

#   lint:
#     executor:
#       name: ubuntu-machine
#       docker_layer_caching: true
#     steps:
#       - checkout
#       - run: docker-compose --file docker-compose.ci.yml run --rm api bin/lint

#   test:
#     executor:
#       name: ubuntu-machine
#       docker_layer_caching: true
#     steps:
#       - checkout
#       # - run: mkdir ./junit
#       - run: docker-compose --file docker-compose.ci.yml build
#       - run: docker-compose --file docker-compose.ci.yml run --rm api bin/test
#       # - store_test_results:
#       #     path: ./junit
#       # - store_artifacts:
#       #     path: ./junit

# # Orchestrate our job run sequence
# workflows:
#   build_and_test:
#     jobs:
#       - build
#       - lint:
#           requires:
#             - build
#       - test:
#           requires:
#             - build

# executors:
#   ubuntu-machine:
#     parameters:
#       docker_layer_caching:
#         default: false
#         type: boolean
#       resource_class:
#         default: medium
#         type: string
#     machine:
#       # See https://circleci.com/docs/2.0/configuration-reference/#available-machine-images
#       # Ubuntu 20.04, Docker v20.10.6, Docker Compose v1.29.1
#       image: ubuntu-2004:202104-01


# version: 2.1

# executors:
#   custom-executor:
#     docker:
#       - image: cimg/base:stable
#         auth:
#           username: $DOCKER_HUB_USER
#           password: $DOCKER_HUB_PASSWORD

# jobs:
#   build:
#     executor: custom-executor
#     steps:
#       - checkout
#       - setup_remote_docker:
#           docker_layer_caching: true
#       - run: docker-compose --file docker-compose.ci.yml build

#   test:
#     docker:
#       - image: tgarciam/goals-api:latest
#     steps:
#       - checkout
#       - run: docker-compose up -d mongo
#       - run: docker-compose run --rm api bin/test

# workflows:
#   build-and-test:
#     jobs:
#       - build
#       - test:
#           requires:
#             - build

# version: 2.1

# jobs:
#   build:
#     docker:
#       - image: cimg/base:stable
#         auth:
#           username: $DOCKER_HUB_USER
#           password: $DOCKER_HUB_PASSWORD
#     steps:
#       - checkout
#       - setup_remote_docker
#       - run: docker-compose --file docker-compose.ci.yml build
#       - run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
#       - run: docker tag goals-api tgarciam/goals-api:latest
#       - run: docker push tgarciam/goals-api

#   test:
#     docker:
#       - image: cimg/base:stable
#     steps:
#       - checkout
#       - setup_remote_docker
#       - run: docker pull tgarciam/goals-api
#       - run: docker-compose --file docker-compose.ci.yml up -d mongo
#       - run: docker-compose run --rm api bin/test

# workflows:
#   build-and-test:
#     jobs:
#       - build
#       - test:
#           requires:
#             - build

# version: 2.1

# jobs:
#   build:
#     working_directory: ~/repo
#     executor:
#       name: ubuntu-machine
#       docker_layer_caching: true
#     steps:
#       - checkout
#       - run: docker-compose --file docker-compose.ci.yml build
#       - run: docker-compose --file docker-compose.ci.yml run --rm api bin/lint
#       - run: docker-compose --file docker-compose.ci.yml up -d mongo
#       - run: docker-compose --file docker-compose.ci.yml run --rm api bin/test

# # Orchestrate our job run sequence
# workflows:
#   build_lint_and_test:
#     jobs:
#       - build

# executors:
#   ubuntu-machine:
#     parameters:
#       docker_layer_caching:
#         default: false
#         type: boolean
#       resource_class:
#         default: medium
#         type: string
#     machine:
#       # See https://circleci.com/docs/2.0/configuration-reference/#available-machine-images
#       # Ubuntu 20.04, Docker v20.10.6, Docker Compose v1.29.1
#       image: ubuntu-2004:202104-01


version: 2.1

jobs:
  build:
    docker:
      - image: cimg/node:20.0.0
    steps:
      - checkout
      - run: docker-compose --file docker-compose.ci.yml build

  test:
    docker:
      - image: cimg/node:20.0.0
    steps:
      - checkout
      - run: docker-compose --file docker-compose.ci.yml up -d mongo
      - run: docker-compose --file docker-compose.ci.yml run --rm api bin/test

workflows:
  build-and-test:
    jobs:
      - build
      - test:
          requires:
            - build
